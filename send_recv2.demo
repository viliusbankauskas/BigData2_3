#!/usr/bin/env python
"""
send/recv demo
"""

from mpi4py import MPI
import sys

import numpy as np
comm = MPI.COMM_WORLD

name = MPI.Get_processor_name()
rank = MPI.COMM_WORLD.Get_rank()
size = MPI.COMM_WORLD.Get_size()

assert size % 3 == 0  # demo for processes divisible 3

if rank % 3 == 0: # even senders
  data = np.random.randint(100,size=2)
  print("%03d/%03d sending : %s to %d and %d" % (rank,size,data, rank + 1,rank + 2))

  comm.send(data[0], dest= rank + 1 )
  comm.send(data[1], dest= rank + 2 )
  
  comm.barrier() # barriers in to be called on all processes!!!

else: # odd ranks receivers
  comm.barrier() # barriers in to be called on all processes!!!
  datafrom=(rank//3) * 3
  data = comm.recv(source= datafrom)
  print("%03d/%03d received: %s from %d" % (rank,size,data,datafrom))
